name: build-codeql-db

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/build-codeql-db.yml'
      - 'src/**'
      - 'include/**'
      - 'third_party/**'

env:
  CODEQL_VERSION: "2.23.0"
  BUILD_TYPE: "x64.release"
  OUT_DIR: "out.gn/x64.release"
  DB_NAME: "v8-src-db"
  DEPOT_TOOLS_UPDATE: "0"
  GCLIENT_PY3: "1"
  NINJA_SUMMARIZE_BUILD: "1"
  NINJA_STATUS: "[%f/%t %o/sec %es] "

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-db:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: APT deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential python3 python3-venv python3-pip \
            ninja-build git curl unzip zstd file lsb-release \
            default-jdk lldb llvm ccache rsync

      - name: depot_tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git "$RUNNER_TEMP/depot_tools"
          echo "$RUNNER_TEMP/depot_tools" >> $GITHUB_PATH

      - name: Mirror repository to /app/v8
        run: |
          APP="/app"
          sudo mkdir -p "$APP"
          sudo chown "$USER":"$USER" "$APP"
          rsync -a "$GITHUB_WORKSPACE"/ "$APP/v8"/
          echo "APPDIR=$APP" >> $GITHUB_ENV
          echo "V8DIR=$APP/v8" >> $GITHUB_ENV
          ls -la "$APP/v8" | head -n 50

      - name: gclient config / sync / runhooks (unmanaged)
        working-directory: ${{ env.APPDIR }}
        run: |
          gclient config --unmanaged --name v8 https://chromium.googlesource.com/v8/v8
          gclient sync -D --no-history --shallow
          gclient runhooks

      - name: Ensure Clang toolchain (CIPD)
        working-directory: ${{ env.V8DIR }}
        run: python3 tools/clang/scripts/update.py

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ccache
          key: ccache-${{ runner.os }}-${{ hashFiles('**/*.gn','**/*.gni','DEPS') }}
          restore-keys: ccache-${{ runner.os }}-

      - name: Configure ccache env
        run: |
          echo "CCACHE_DIR=$HOME/.cache/ccache" >> $GITHUB_ENV
          echo "CCACHE_MAXSIZE=2G" >> $GITHUB_ENV
          echo "PATH=/usr/lib/ccache:$PATH" >> $GITHUB_ENV

      - name: GN gen (lean build)
        working-directory: ${{ env.V8DIR }}
        run: |
          gn gen $OUT_DIR --args='
            is_debug=false
          '

      - name: Install CodeQL CLI
        run: |
          curl -L -o codeql.zip "https://github.com/github/codeql-cli-binaries/releases/download/v${CODEQL_VERSION}/codeql-linux64.zip"
          unzip -q codeql.zip -d "$RUNNER_TEMP"
          echo "$RUNNER_TEMP/codeql" >> $GITHUB_PATH

      - name: Verify CodeQL
        run: codeql --version

      - name: Build CodeQL DB (ninja d8)
        working-directory: ${{ env.V8DIR }}
        run: |
          codeql database create "${DB_NAME}" \
            --language=cpp \
            --source-root="${{ env.V8DIR }}" \
            --command="ninja -C ./${OUT_DIR} d8 -j2 -l2"

      - name: Show ccache stats
        if: always()
        run: ccache -s || true

      - name: Package DB (zstd)
        working-directory: ${{ env.V8DIR }}
        run: |
          tar -I 'zstd -T0 -3' -cvf ${DB_NAME}.tar.zst ${DB_NAME}
          ls -lh ${DB_NAME}.tar.zst

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.DB_NAME }}-${{ github.sha }}
          path: ${{ env.V8DIR }}/${{ env.DB_NAME }}.tar.zst
          if-no-files-found: error
