name: run-ql-on-updated-db

on:
  workflow_run:
    workflows: ["build-codeql-db"]
    types: [completed]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  query-all:
    runs-on: self-hosted
    timeout-minutes: 0

    env:
      DB_DIR: "/home/user/app/v8-src-db"
      QL_DIR_SRC: "${{ github.workspace }}/ql"
      QL_DIR_DST: "/home/user/app/ql"
      OUT_BQRS: "/home/user/app/bqrs"
      CODEQL_RAM: "16384"
      CODEQL_THREADS: "4"
      CODEQL: "/home/user/codeql-cli/codeql/codeql"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show context
        run: |
          echo "Triggered by: $GITHUB_EVENT_NAME"
          whoami
          id
          ls -la "$DB_DIR" || true

      - name: Verify CodeQL binary
        run: |
          test -x "$CODEQL" || { echo "::error::CODEQL not executable at $CODEQL"; exit 1; }
          "$CODEQL" --version

      - name: Verify DB exists
        run: |
          test -d "$DB_DIR" || { echo "::error::DB not found at $DB_DIR"; exit 1; }
          test -f "$DB_DIR/codeql-database.yml" || { echo "::error::Invalid CodeQL DB (missing codeql-database.yml)"; exit 1; }

      # 🔁 ~/app/ql을 싹 비우고 레포의 ql/로 클린 복사
      - name: Clean and copy ql/ to /home/user/app/ql
        shell: bash
        run: |
          if [ ! -d "$QL_DIR_SRC" ]; then
            echo "::error::No ql/ directory in repo at $QL_DIR_SRC"
            exit 1
          fi
          mkdir -p "$QL_DIR_DST"
          # 목적지만 깨끗이 비우기
          find "$QL_DIR_DST" -mindepth 1 -maxdepth 1 -exec rm -rf {} +
          cp -a "$QL_DIR_SRC"/. "$QL_DIR_DST"/
          echo "Synced (clean):"
          find "$QL_DIR_DST" -maxdepth 2 -type f -name '*.ql' | head -n 50 || true

      # ~/app/ql에 codeql-pack.yml 없으면 생성 후 pack install
      - name: Ensure codeql-pack.yml and install packs
        working-directory: ${{ env.QL_DIR_DST }}
        shell: bash
        run: |
          if [ ! -f codeql-pack.yml ] && [ ! -f qlpack.yml ]; then
            {
              echo 'name: scratch-bug-v8-custom-queries'
              echo 'version: 0.0.1'
              echo 'library: false'
              echo 'extractor: cpp'
              echo 'dependencies:'
              echo '  codeql/cpp-all: "*"'
            } > codeql-pack.yml
            echo "Created default codeql-pack.yml"
          fi
          export CODEQL_ALLOW_INSTALLATION_ANYWHERE=true
          "$CODEQL" pack install

      - name: Run all .ql -> .bqrs (skip empty results)
        env:
          DB_DIR: "/home/user/app/v8-src-db"
          QL_DIR: "/home/user/app/ql"
          OUT_BQRS: "/home/user/app/bqrs"
          CODEQL: "/home/user/codeql-cli/codeql/codeql"
        shell: bash
        run: |
          export CODEQL_ALLOW_INSTALLATION_ANYWHERE=true
          BUNDLED="$CODEQL/bundled/packs"
          SEARCH_PATH="$QL_DIR:$HOME/.codeql/packages:$BUNDLED"

          mkdir -p "$OUT_BQRS"
          shopt -s globstar nullglob
          count_total=0
          count_kept=0
          for q in "$QL_DIR"/**/*.ql; do
            rel="${q#"$QL_DIR"/}"
            out="$OUT_BQRS/${rel%.ql}.bqrs"
            tmp="${out}.tmp"
            mkdir -p "$(dirname "$out")"

            echo "[CodeQL] $rel -> ${out#$OUT_BQRS/} (temp: $(basename "$tmp"))"
            "$CODEQL" query run \
              --database "$DB_DIR" \
              --search-path "$SEARCH_PATH" \
              --output "$tmp" \
              "$q" || { echo "::error::run failed: $rel"; rm -f "$tmp"; exit 1; }

            # 빈 결과는 저장 안 함 (헤더만 있는 경우)
            lines=$("$CODEQL" bqrs decode --format=csv "$tmp" | wc -l | tr -d ' ')
            if [ "${lines:-0}" -le 1 ]; then
              echo "  -> empty result, dropping"
              rm -f "$tmp"
            else
              mv -f "$tmp" "$out"
              echo "  -> non-empty, saved: ${out#$OUT_BQRS/}"
              count_kept=$((count_kept+1))
            fi
            count_total=$((count_total+1))
          done
          echo "Total queries: $count_total, kept(non-empty): $count_kept"

      - name: List BQRS tree
        run: |
          find "$OUT_BQRS" -type f -name '*.bqrs' | head -n 200 || true
